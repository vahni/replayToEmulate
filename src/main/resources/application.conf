bdtlab {
    blob {
        # blob storage account name
        account = ""
        account = ${?BLOB_ACCOUNT}
        # blob storage account key
        key = ""
        key = ${?BLOB_KEY}
        # blob container data is stored in
        container = ""
        container = ${?BLOB_CONTAINER}
        # optional root folder path inside the container
        root-folder = ""
        root-folder = ${?ROOT_FOLDER}
        # class to process the folder structure and produce a set of blobs
        structure = "bdtlab.replay.BlobStructure.EventHubCapture"
        structure = ${?BLOB_STRUCTURE}
        # blob streaming class to handle data deserialization and conversion to kafka messages
        streamer = "bdtlab.replay.BlobStreamer.EventHubStreamer"
        streamer = ${?BLOB_STREAMER}
        # timeout for the blob list command
        list-timeout = 60s
        list-timeout = ${?BLOB_TIMEOUT}
    }
    # start date to replay data from
    start-date = "2021-01-01"
    start-date = ${?START_DATE}
    # end date to replay data to
    end-date = "2021-01-02"
    end-date = ${?END_DATE}
    # how many threads do we run in parallel, defines how many blobs are processed simultaneously
    parallelism = 8
    parallelism = ${?PARALLELISM}
    # number of partitions
    partitions = 1
    partitions = ${?PARTITIONS}
    # timeout for processing a single blob file
    stream-timeout = 90m
    stream-timeout = ${?STREAM_TIMEOUT}
    kafka {
        # output topic to write to
        output-topic ="test"
        output-topic = ${?OUTPUT_TOPIC}
        # kafka key path, this is a json element and can be nested e.g. $.body.inner.key
        key-path = "$.tagId"
        key-path = ${?JSON_KEY_PATH}
        # kafka throttle rate
        throttle {
            # number of messages to send
            messages = 10000
            messages = ${?THROTTLE_MESSAGES}
            # over this time period
            duration = 1s
            duration = ${?THROTTLE_DURATION}
        }
    }
}
# third party config
akka {
  actor {
    default-dispatcher {
      type = Dispatcher
      executor = "thread-pool-executor"
      thread-pool-executor {
        fixed-pool-size = ${bdtlab.parallelism}
      }
      throughput = 64
    }
  }
  kafka.producer {
    kafka-clients {
      bootstrap.servers = "localhost:9092"
      bootstrap.servers = ${?KAFKA_BOOTSTRAP_SERVERS}
      security.protocol=PLAINTEXT
      security.protocol=${?KAFKA_SECURITY_PROTOCOL}
      # TODO configure ssl
      ssl.truststore.location=/var/private/ssl/kafka.client.truststore.jks
      ssl.truststore.password=test1234
      ssl.keystore.location=/var/private/ssl/kafka.client.keystore.jks
      ssl.keystore.password=test1234
      ssl.key.password=test1234
    }
  }
}